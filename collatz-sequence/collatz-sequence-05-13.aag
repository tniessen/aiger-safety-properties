aag 196 5 13 1 178
2
4
6
8
10
12 349
14 355
16 361
18 367
20 373
22 374
24 376
26 378
28 380
30 382
32 384
34 386
36 388
392
38 15 17
40 19 21
42 23 25
44 27 29
46 31 33
48 35 37
50 38 40
52 42 44
54 46 48
56 50 52
58 54 56
60 13 14
62 12 15
64 61 63
66 12 14
68 13 65
70 12 64
72 69 71
74 12 65
76 67 75
78 15 16
80 14 17
82 79 81
84 14 16
86 76 83
88 77 82
90 87 89
92 77 83
94 85 93
96 17 18
98 16 19
100 97 99
102 16 18
104 94 101
106 95 100
108 105 107
110 95 101
112 103 111
114 19 20
116 18 21
118 115 117
120 18 20
122 112 119
124 113 118
126 123 125
128 113 119
130 121 129
132 21 22
134 20 23
136 133 135
138 20 22
140 130 137
142 131 136
144 141 143
146 131 137
148 139 147
150 23 24
152 22 25
154 151 153
156 22 24
158 148 155
160 149 154
162 159 161
164 149 155
166 157 165
168 25 26
170 24 27
172 169 171
174 24 26
176 166 173
178 167 172
180 177 179
182 167 173
184 175 183
186 27 28
188 26 29
190 187 189
192 26 28
194 184 191
196 185 190
198 195 197
200 185 191
202 193 201
204 29 30
206 28 31
208 205 207
210 28 30
212 202 209
214 203 208
216 213 215
218 203 209
220 211 219
222 31 32
224 30 33
226 223 225
228 30 32
230 220 227
232 221 226
234 231 233
236 221 227
238 229 237
240 33 34
242 32 35
244 241 243
246 32 34
248 238 245
250 239 244
252 249 251
254 239 245
256 247 255
258 35 36
260 34 37
262 259 261
264 34 36
266 256 263
268 257 262
270 267 269
272 257 263
274 265 273
276 12 73
278 13 16
280 277 279
282 12 91
284 13 18
286 283 285
288 12 109
290 13 20
292 289 291
294 12 127
296 13 22
298 295 297
300 12 145
302 13 24
304 301 303
306 12 163
308 13 26
310 307 309
312 12 181
314 13 28
316 313 315
318 12 199
320 13 30
322 319 321
324 12 217
326 13 32
328 325 327
330 12 235
332 13 34
334 331 333
336 12 253
338 13 36
340 337 339
342 12 271
344 2 58
346 59 60
348 345 347
350 4 58
352 59 281
354 351 353
356 6 58
358 59 287
360 357 359
362 8 58
364 59 293
366 363 365
368 10 58
370 59 299
372 369 371
374 59 305
376 59 311
378 59 317
380 59 323
382 59 329
384 59 335
386 59 341
388 59 342
390 37 274
392 12 391
i0 input_bit_0
i1 input_bit_1
i2 input_bit_2
i3 input_bit_3
i4 input_bit_4
l0 state_bit_0
l1 state_bit_1
l2 state_bit_2
l3 state_bit_3
l4 state_bit_4
l5 state_bit_5
l6 state_bit_6
l7 state_bit_7
l8 state_bit_8
l9 state_bit_9
l10 state_bit_10
l11 state_bit_11
l12 state_bit_12
o0 overflow_indicator
c
--------------------------------------------------------------------------------
This circuit takes a 5-bit integer and then proceeds to compute the Collatz
sequence starting at the given number. Once it reaches 1, it again copies the 5
input bits and begins computing the new Collatz sequence. During the calculation
of each sequence, any change in the input bits is ignored.
---
While the input consists of 5 bits only, internally, the circuit uses 13-bit
arithmetic. The single output bit will be set to 1 whenever an overflow occurs
in the calculation of the Collatz sequence (and will reset to 0 immediately
afterwards).
---
The smallest input that causes such an overflow is 27 (after 77 steps). The
input that causes an overflow within the smallest number of steps is 31 (after
72 steps).
--------------------------------------------------------------------------------
This file is part of https://github.com/tniessen/aiger-safety-properties.
---
The output variable is SATISFIABLE.
