aag 442 22 26 1 394
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46 747
48 753
50 759
52 765
54 771
56 777
58 783
60 789
62 795
64 801
66 807
68 813
70 819
72 825
74 831
76 837
78 843
80 849
82 855
84 861
86 867
88 873
90 874
92 876
94 878
96 880
884
98 49 51
100 53 55
102 57 59
104 61 63
106 65 67
108 69 71
110 73 75
112 77 79
114 81 83
116 85 87
118 89 91
120 93 95
122 98 100
124 102 104
126 106 108
128 110 112
130 114 116
132 118 120
134 122 124
136 126 128
138 130 132
140 134 136
142 97 138
144 140 142
146 47 48
148 46 49
150 147 149
152 46 48
154 47 151
156 46 150
158 155 157
160 46 151
162 153 161
164 49 50
166 48 51
168 165 167
170 48 50
172 162 169
174 163 168
176 173 175
178 163 169
180 171 179
182 51 52
184 50 53
186 183 185
188 50 52
190 180 187
192 181 186
194 191 193
196 181 187
198 189 197
200 53 54
202 52 55
204 201 203
206 52 54
208 198 205
210 199 204
212 209 211
214 199 205
216 207 215
218 55 56
220 54 57
222 219 221
224 54 56
226 216 223
228 217 222
230 227 229
232 217 223
234 225 233
236 57 58
238 56 59
240 237 239
242 56 58
244 234 241
246 235 240
248 245 247
250 235 241
252 243 251
254 59 60
256 58 61
258 255 257
260 58 60
262 252 259
264 253 258
266 263 265
268 253 259
270 261 269
272 61 62
274 60 63
276 273 275
278 60 62
280 270 277
282 271 276
284 281 283
286 271 277
288 279 287
290 63 64
292 62 65
294 291 293
296 62 64
298 288 295
300 289 294
302 299 301
304 289 295
306 297 305
308 65 66
310 64 67
312 309 311
314 64 66
316 306 313
318 307 312
320 317 319
322 307 313
324 315 323
326 67 68
328 66 69
330 327 329
332 66 68
334 324 331
336 325 330
338 335 337
340 325 331
342 333 341
344 69 70
346 68 71
348 345 347
350 68 70
352 342 349
354 343 348
356 353 355
358 343 349
360 351 359
362 71 72
364 70 73
366 363 365
368 70 72
370 360 367
372 361 366
374 371 373
376 361 367
378 369 377
380 73 74
382 72 75
384 381 383
386 72 74
388 378 385
390 379 384
392 389 391
394 379 385
396 387 395
398 75 76
400 74 77
402 399 401
404 74 76
406 396 403
408 397 402
410 407 409
412 397 403
414 405 413
416 77 78
418 76 79
420 417 419
422 76 78
424 414 421
426 415 420
428 425 427
430 415 421
432 423 431
434 79 80
436 78 81
438 435 437
440 78 80
442 432 439
444 433 438
446 443 445
448 433 439
450 441 449
452 81 82
454 80 83
456 453 455
458 80 82
460 450 457
462 451 456
464 461 463
466 451 457
468 459 467
470 83 84
472 82 85
474 471 473
476 82 84
478 468 475
480 469 474
482 479 481
484 469 475
486 477 485
488 85 86
490 84 87
492 489 491
494 84 86
496 486 493
498 487 492
500 497 499
502 487 493
504 495 503
506 87 88
508 86 89
510 507 509
512 86 88
514 504 511
516 505 510
518 515 517
520 505 511
522 513 521
524 89 90
526 88 91
528 525 527
530 88 90
532 522 529
534 523 528
536 533 535
538 523 529
540 531 539
542 91 92
544 90 93
546 543 545
548 90 92
550 540 547
552 541 546
554 551 553
556 541 547
558 549 557
560 93 94
562 92 95
564 561 563
566 92 94
568 558 565
570 559 564
572 569 571
574 559 565
576 567 575
578 95 96
580 94 97
582 579 581
584 94 96
586 576 583
588 577 582
590 587 589
592 577 583
594 585 593
596 46 159
598 47 50
600 597 599
602 46 177
604 47 52
606 603 605
608 46 195
610 47 54
612 609 611
614 46 213
616 47 56
618 615 617
620 46 231
622 47 58
624 621 623
626 46 249
628 47 60
630 627 629
632 46 267
634 47 62
636 633 635
638 46 285
640 47 64
642 639 641
644 46 303
646 47 66
648 645 647
650 46 321
652 47 68
654 651 653
656 46 339
658 47 70
660 657 659
662 46 357
664 47 72
666 663 665
668 46 375
670 47 74
672 669 671
674 46 393
676 47 76
678 675 677
680 46 411
682 47 78
684 681 683
686 46 429
688 47 80
690 687 689
692 46 447
694 47 82
696 693 695
698 46 465
700 47 84
702 699 701
704 46 483
706 47 86
708 705 707
710 46 501
712 47 88
714 711 713
716 46 519
718 47 90
720 717 719
722 46 537
724 47 92
726 723 725
728 46 555
730 47 94
732 729 731
734 46 573
736 47 96
738 735 737
740 46 591
742 2 144
744 145 146
746 743 745
748 4 144
750 145 601
752 749 751
754 6 144
756 145 607
758 755 757
760 8 144
762 145 613
764 761 763
766 10 144
768 145 619
770 767 769
772 12 144
774 145 625
776 773 775
778 14 144
780 145 631
782 779 781
784 16 144
786 145 637
788 785 787
790 18 144
792 145 643
794 791 793
796 20 144
798 145 649
800 797 799
802 22 144
804 145 655
806 803 805
808 24 144
810 145 661
812 809 811
814 26 144
816 145 667
818 815 817
820 28 144
822 145 673
824 821 823
826 30 144
828 145 679
830 827 829
832 32 144
834 145 685
836 833 835
838 34 144
840 145 691
842 839 841
844 36 144
846 145 697
848 845 847
850 38 144
852 145 703
854 851 853
856 40 144
858 145 709
860 857 859
862 42 144
864 145 715
866 863 865
868 44 144
870 145 721
872 869 871
874 145 727
876 145 733
878 145 739
880 145 740
882 97 594
884 46 883
i0 input_bit_0
i1 input_bit_1
i2 input_bit_2
i3 input_bit_3
i4 input_bit_4
i5 input_bit_5
i6 input_bit_6
i7 input_bit_7
i8 input_bit_8
i9 input_bit_9
i10 input_bit_10
i11 input_bit_11
i12 input_bit_12
i13 input_bit_13
i14 input_bit_14
i15 input_bit_15
i16 input_bit_16
i17 input_bit_17
i18 input_bit_18
i19 input_bit_19
i20 input_bit_20
i21 input_bit_21
l0 state_bit_0
l1 state_bit_1
l2 state_bit_2
l3 state_bit_3
l4 state_bit_4
l5 state_bit_5
l6 state_bit_6
l7 state_bit_7
l8 state_bit_8
l9 state_bit_9
l10 state_bit_10
l11 state_bit_11
l12 state_bit_12
l13 state_bit_13
l14 state_bit_14
l15 state_bit_15
l16 state_bit_16
l17 state_bit_17
l18 state_bit_18
l19 state_bit_19
l20 state_bit_20
l21 state_bit_21
l22 state_bit_22
l23 state_bit_23
l24 state_bit_24
l25 state_bit_25
o0 overflow_indicator
c
--------------------------------------------------------------------------------
This circuit takes a 22-bit integer and then proceeds to compute the Collatz
sequence starting at the given number. Once it reaches 1, it again copies the 22
input bits and begins computing the new Collatz sequence. During the calculation
of each sequence, any change in the input bits is ignored.
---
While the input consists of 22 bits only, internally, the circuit uses 26-bit
arithmetic. The single output bit will be set to 1 whenever an overflow occurs
in the calculation of the Collatz sequence (and will reset to 0 immediately
afterwards).
---
The smallest input that causes such an overflow is 26623 (after 61 steps). The
input that causes an overflow within the smallest number of steps is 2945855
(after 11 steps).
--------------------------------------------------------------------------------
This file is part of https://github.com/tniessen/aiger-safety-property-examples.
---
The output variable is SATISFIABLE.
