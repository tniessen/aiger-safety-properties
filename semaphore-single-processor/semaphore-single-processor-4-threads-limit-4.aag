aag 533 8 28 1 497
2
4
6
8
10
12
14
16
18 261
20 97
22 103
24 109
26 115
28 305
30 317
32 329
34 341
36 389
38 427
40 463
42 483
44 521
46 559
48 595
50 615
52 653
54 691
56 727
58 747
60 785
62 823
64 859
66 879
68 959
70 971
72 983
1067
74 2 29
76 4 31
78 6 33
80 8 35
82 75 76
84 75 83
86 78 84
88 84 87
90 80 88
92 19 74
94 18 20
96 93 95
98 19 82
100 18 22
102 99 101
104 19 86
106 18 24
108 105 107
110 19 90
112 18 26
114 111 113
116 2 97
118 4 103
120 6 109
122 8 115
124 36 39
126 41 43
128 124 126
130 37 39
132 41 42
134 130 132
136 129 135
138 116 137
140 44 47
142 49 51
144 140 142
146 45 47
148 49 50
150 146 148
152 145 151
154 118 153
156 52 55
158 57 59
160 156 158
162 53 55
164 57 58
166 162 164
168 161 167
170 120 169
172 60 63
174 65 67
176 172 174
178 61 63
180 65 66
182 178 180
184 177 183
186 122 185
188 139 155
190 171 187
192 188 190
194 37 38
196 40 43
198 194 196
200 40 42
202 124 200
204 199 203
206 116 205
208 45 46
210 48 51
212 208 210
214 48 50
216 140 214
218 213 217
220 118 219
222 53 54
224 56 59
226 222 224
228 56 58
230 156 228
232 227 231
234 120 233
236 61 62
238 64 67
240 236 238
242 64 66
244 172 242
246 241 245
248 122 247
250 207 221
252 235 249
254 250 252
256 18 254
258 192 256
260 192 259
262 29 30
264 29 263
266 32 264
268 264 267
270 34 268
272 130 200
274 116 272
276 146 214
278 118 276
280 162 228
282 120 280
284 178 242
286 122 284
288 275 279
290 283 287
292 288 290
294 124 196
296 116 294
298 28 293
300 28 299
302 297 300
304 297 303
306 140 210
308 118 306
310 262 293
312 30 311
314 309 312
316 309 315
318 156 224
320 120 318
322 266 293
324 32 323
326 321 324
328 321 327
330 172 238
332 122 330
334 270 293
336 34 335
338 333 336
340 333 339
342 29 31
344 33 35
346 342 344
348 69 71
350 72 348
352 39 131
354 40 130
356 41 353
358 355 357
360 11 36
362 36 361
364 38 363
366 10 37
368 39 366
370 195 369
372 40 364
374 41 371
376 373 375
378 42 359
380 43 377
382 379 381
384 116 383
386 36 117
388 385 387
390 36 346
392 39 390
394 195 393
396 40 124
398 41 395
400 397 399
402 38 365
404 37 351
406 38 404
408 125 407
410 40 403
412 41 409
414 411 413
416 42 401
418 43 415
420 417 419
422 116 421
424 38 117
426 423 425
428 36 347
430 36 38
432 39 428
434 431 433
436 39 40
438 41 435
440 437 439
442 37 350
444 37 443
446 38 445
448 41 446
450 411 449
452 42 441
454 43 451
456 453 455
458 116 457
460 40 117
462 459 461
464 40 437
466 10 36
468 38 466
470 40 468
472 42 465
474 43 470
476 473 475
478 116 477
480 42 117
482 479 481
484 47 147
486 48 146
488 49 485
490 487 489
492 13 44
494 44 493
496 46 495
498 12 45
500 47 498
502 209 501
504 48 496
506 49 503
508 505 507
510 50 491
512 51 509
514 511 513
516 118 515
518 44 119
520 517 519
522 44 346
524 47 522
526 209 525
528 48 140
530 49 527
532 529 531
534 46 497
536 45 351
538 46 536
540 141 539
542 48 535
544 49 541
546 543 545
548 50 533
550 51 547
552 549 551
554 118 553
556 46 119
558 555 557
560 44 347
562 44 46
564 47 560
566 563 565
568 47 48
570 49 567
572 569 571
574 45 350
576 45 575
578 46 577
580 49 578
582 543 581
584 50 573
586 51 583
588 585 587
590 118 589
592 48 119
594 591 593
596 48 569
598 12 44
600 46 598
602 48 600
604 50 597
606 51 602
608 605 607
610 118 609
612 50 119
614 611 613
616 55 163
618 56 162
620 57 617
622 619 621
624 15 52
626 52 625
628 54 627
630 14 53
632 55 630
634 223 633
636 56 628
638 57 635
640 637 639
642 58 623
644 59 641
646 643 645
648 120 647
650 52 121
652 649 651
654 52 346
656 55 654
658 223 657
660 56 156
662 57 659
664 661 663
666 54 629
668 53 351
670 54 668
672 157 671
674 56 667
676 57 673
678 675 677
680 58 665
682 59 679
684 681 683
686 120 685
688 54 121
690 687 689
692 52 347
694 52 54
696 55 692
698 695 697
700 55 56
702 57 699
704 701 703
706 53 350
708 53 707
710 54 709
712 57 710
714 675 713
716 58 705
718 59 715
720 717 719
722 120 721
724 56 121
726 723 725
728 56 701
730 14 52
732 54 730
734 56 732
736 58 729
738 59 734
740 737 739
742 120 741
744 58 121
746 743 745
748 63 179
750 64 178
752 65 749
754 751 753
756 17 60
758 60 757
760 62 759
762 16 61
764 63 762
766 237 765
768 64 760
770 65 767
772 769 771
774 66 755
776 67 773
778 775 777
780 122 779
782 60 123
784 781 783
786 60 346
788 63 786
790 237 789
792 64 172
794 65 791
796 793 795
798 62 761
800 61 351
802 62 800
804 173 803
806 64 799
808 65 805
810 807 809
812 66 797
814 67 811
816 813 815
818 122 817
820 62 123
822 819 821
824 60 347
826 60 62
828 63 824
830 827 829
832 63 64
834 65 831
836 833 835
838 61 350
840 61 839
842 62 841
844 65 842
846 807 845
848 66 837
850 67 847
852 849 851
854 122 853
856 64 123
858 855 857
860 64 833
862 16 60
864 62 862
866 64 864
868 66 861
870 67 866
872 869 871
874 122 873
876 66 123
878 875 877
880 126 430
882 116 880
884 142 562
886 118 884
888 158 694
890 120 888
892 174 826
894 122 892
896 883 887
898 891 895
900 896 898
902 132 194
904 116 902
906 148 208
908 118 906
910 164 222
912 120 910
914 180 236
916 122 914
918 905 909
920 913 917
922 918 920
924 69 70
926 68 71
928 925 927
930 68 70
932 72 931
934 73 930
936 933 935
938 72 930
940 349 931
942 72 349
944 73 348
946 943 945
948 69 923
950 68 922
952 949 951
954 69 901
956 900 953
958 955 957
960 923 941
962 70 922
964 961 963
966 901 929
968 900 965
970 967 969
972 923 947
974 72 922
976 973 975
978 901 937
980 900 977
982 979 981
984 196 430
986 29 984
988 210 562
990 31 988
992 224 694
994 33 992
996 238 826
998 35 996
1000 986 991
1002 987 990
1004 1001 1003
1006 986 990
1008 995 1005
1010 994 1004
1012 1009 1011
1014 994 1005
1016 1006 1015
1018 1007 1014
1020 1017 1019
1022 1006 1014
1024 999 1013
1026 998 1012
1028 1025 1027
1030 998 1013
1032 1023 1029
1034 1022 1028
1036 1033 1035
1038 1022 1029
1040 1031 1039
1042 1021 1040
1044 1020 1041
1046 1043 1045
1048 1021 1041
1050 1037 1046
1052 1046 1051
1054 1048 1053
1056 347 351
1058 901 938
1060 923 944
1062 1055 1059
1064 1057 1061
1066 1062 1064
i0 enable_thread_0
i1 enable_thread_1
i2 enable_thread_2
i3 enable_thread_3
i4 signal_thread_0
i5 signal_thread_1
i6 signal_thread_2
i7 signal_thread_3
l0 interrupts_disabled
l1 thread_0_selected
l2 thread_1_selected
l3 thread_2_selected
l4 thread_3_selected
l5 thread_0_sleeping
l6 thread_1_sleeping
l7 thread_2_sleeping
l8 thread_3_sleeping
l9 thread_0_pc_0
l10 thread_0_pc_1
l11 thread_0_pc_2
l12 thread_0_pc_3
l13 thread_1_pc_0
l14 thread_1_pc_1
l15 thread_1_pc_2
l16 thread_1_pc_3
l17 thread_2_pc_0
l18 thread_2_pc_1
l19 thread_2_pc_2
l20 thread_2_pc_3
l21 thread_3_pc_0
l22 thread_3_pc_1
l23 thread_3_pc_2
l24 thread_3_pc_3
l25 semaphore_count_0
l26 semaphore_count_1
l27 semaphore_count_2
o0 bad_state_detector
c
--------------------------------------------------------------------------------
This circuit simulates a single processor that switches between 4 threads using
a simplistic scheduler. The scheduler is triggered by interrupts, which can be
disabled and enabled by the current thread. Additionally, a thread can enter a
sleeping state, which will prevent the scheduler from switching to that thread.
---
On top of these features, a semaphore is implemented, which ensures that at most
4 threads can be within the critical section simultaneously. When a thread wants
to acquire the semaphore after receiving a signal, it disables interrupts and
then compares the semaphore count to the limit. If possible, the thread changes
the semaphore count and continues after enabling interrupts again. If that is
not possible, the thread enters a sleeping state, enables interrupts, and yields
to the scheduler. Once a thread has acquired the semaphore, it remains in the
critical section until receiving another signal. Once that happens, it releases
the semaphore by first disabling interrupts, thus disabling the scheduler, then
checks if another thread is waiting for the semaphore. If that is the case, the
active thread wakes one of the waiting threads, then enables interrupts again,
allowing the scheduler to switch to the awakened thread at the next interrupt.
If no thread is waiting for the semaphore, the active thread changes the
semaphore count and enables interrupts again, resuming normal control flow, and
returns to its initial state (i.e., waits for another signal).
---
The output variable is set if any of the following is true, none of which can
happen:
* 5 or more threads are in the critical section simultaneously,
* an arithmetic overflow occurs when changing the semaphore count, or
* a thread is sleeping for no reason.
--------------------------------------------------------------------------------
This file is part of https://github.com/tniessen/aiger-safety-properties.
---
The output variable is UNSATISFIABLE.
