aag 352 1 19 1 332
2
4 71
6 77
8 83
10 89
12 95
14 103
16 111
18 119
20 127
22 135
24 143
26 151
28 159
30 167
32 175
34 183
36 191
38 199
40 207
705
42 5 6
44 4 7
46 43 45
48 4 6
50 8 49
52 9 48
54 51 53
56 8 48
58 10 57
60 11 56
62 59 61
64 10 56
66 2 5
68 3 4
70 67 69
72 2 47
74 3 6
76 73 75
78 2 55
80 3 8
82 79 81
84 2 63
86 3 10
88 85 87
90 2 41
92 3 12
94 91 93
96 12 41
98 2 96
100 3 14
102 99 101
104 14 41
106 2 104
108 3 16
110 107 109
112 16 41
114 2 112
116 3 18
118 115 117
120 18 41
122 2 120
124 3 20
126 123 125
128 20 41
130 2 128
132 3 22
134 131 133
136 22 41
138 2 136
140 3 24
142 139 141
144 24 41
146 2 144
148 3 26
150 147 149
152 26 41
154 2 152
156 3 28
158 155 157
160 28 41
162 2 160
164 3 30
166 163 165
168 30 41
170 2 168
172 3 32
174 171 173
176 32 41
178 2 176
180 3 34
182 179 181
184 34 41
186 2 184
188 3 36
190 187 189
192 36 41
194 2 192
196 3 38
198 195 197
200 38 41
202 2 200
204 3 40
206 203 205
208 12 15
210 13 14
212 209 211
214 12 14
216 17 213
218 16 212
220 217 219
222 16 213
224 214 223
226 215 222
228 225 227
230 214 222
232 19 221
234 18 220
236 233 235
238 18 221
240 231 237
242 230 236
244 241 243
246 230 237
248 239 247
250 229 248
252 228 249
254 251 253
256 229 249
258 21 245
260 20 244
262 259 261
264 20 245
266 255 265
268 254 264
270 267 269
272 255 264
274 256 273
276 257 272
278 275 277
280 256 272
282 23 263
284 22 262
286 283 285
288 22 263
290 281 287
292 280 286
294 291 293
296 280 287
298 289 297
300 271 298
302 270 299
304 301 303
306 271 299
308 279 307
310 278 306
312 309 311
314 279 306
316 25 295
318 24 294
320 317 319
322 24 295
324 315 321
326 314 320
328 325 327
330 314 321
332 323 331
334 305 332
336 304 333
338 335 337
340 305 333
342 313 341
344 312 340
346 343 345
348 313 340
350 27 329
352 26 328
354 351 353
356 26 329
358 349 355
360 348 354
362 359 361
364 348 355
366 357 365
368 339 366
370 338 367
372 369 371
374 339 367
376 347 375
378 346 374
380 377 379
382 347 374
384 29 363
386 28 362
388 385 387
390 28 363
392 373 391
394 372 390
396 393 395
398 373 390
400 381 399
402 380 398
404 401 403
406 381 398
408 382 407
410 383 406
412 409 411
414 382 406
416 31 389
418 30 388
420 417 419
422 30 389
424 415 421
426 414 420
428 425 427
430 414 421
432 423 431
434 397 432
436 396 433
438 435 437
440 397 433
442 405 441
444 404 440
446 443 445
448 405 440
450 413 449
452 412 448
454 451 453
456 413 448
458 33 429
460 32 428
462 459 461
464 32 429
466 457 463
468 456 462
470 467 469
472 456 463
474 465 473
476 439 474
478 438 475
480 477 479
482 439 475
484 447 483
486 446 482
488 485 487
490 447 482
492 455 491
494 454 490
496 493 495
498 455 490
500 35 471
502 34 470
504 501 503
506 34 471
508 499 505
510 498 504
512 509 511
514 498 505
516 507 515
518 481 516
520 480 517
522 519 521
524 481 517
526 489 525
528 488 524
530 527 529
532 489 524
534 497 533
536 496 532
538 535 537
540 497 532
542 37 513
544 36 512
546 543 545
548 36 513
550 541 547
552 540 546
554 551 553
556 540 547
558 549 557
560 523 558
562 522 559
564 561 563
566 523 559
568 531 567
570 530 566
572 569 571
574 531 566
576 539 575
578 538 574
580 577 579
582 539 574
584 39 555
586 38 554
588 585 587
590 38 555
592 583 589
594 582 588
596 593 595
598 582 589
600 591 599
602 565 600
604 564 601
606 603 605
608 565 601
610 573 609
612 572 608
614 611 613
616 573 608
618 581 617
620 580 616
622 619 621
624 581 616
626 41 597
628 40 596
630 627 629
632 40 597
634 625 631
636 624 630
638 635 637
640 624 631
642 633 641
644 607 642
646 606 643
648 645 647
650 607 643
652 615 651
654 614 650
656 653 655
658 615 650
660 623 659
662 622 658
664 661 663
666 623 658
668 4 639
670 5 638
672 669 671
674 6 649
676 7 648
678 675 677
680 8 657
682 9 656
684 681 683
686 10 665
688 11 664
690 687 689
692 673 679
694 685 691
696 692 694
698 41 64
700 40 65
702 699 701
704 696 702
i0 enable
l0 binary_bit_0
l1 binary_bit_1
l2 binary_bit_2
l3 binary_bit_3
l4 unary_bit_0
l5 unary_bit_1
l6 unary_bit_2
l7 unary_bit_3
l8 unary_bit_4
l9 unary_bit_5
l10 unary_bit_6
l11 unary_bit_7
l12 unary_bit_8
l13 unary_bit_9
l14 unary_bit_10
l15 unary_bit_11
l16 unary_bit_12
l17 unary_bit_13
l18 unary_bit_14
o0 bad_state_detector
c
--------------------------------------------------------------------------------
This circuit implements two counters, one of which is a 4-bit binary counter and
one of which is a 15-bit unary counter. Whenever the input bit is set, both
counters are incremented. The output bit is set if the Hamming weight (popcount)
of the unary counter is not equal to the value of the binary counter, or if
either counter overflows and the other does not.
---
This is challenging to verify in multiple ways. First, the unary counter
consists of 15 latches, which blow up the state space. Second, the circuit that
computes the popcount of the unary counter is non-trivial and it is has not
explicitly been optimized for the fact that the underlying counter is unary (as
opposed to an arbitrary bit sequence, such as a binary counter).
---
Nevertheless, despite the large state space of 524288 states, only 16 states are
actually reachable, and can be enumerated easily.
--------------------------------------------------------------------------------
This file is part of https://github.com/tniessen/aiger-safety-properties.
---
The output variable is UNSATISFIABLE.
